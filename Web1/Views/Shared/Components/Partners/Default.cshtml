@using Web1.DTO
@model Web1.ViewModel.PartnersViewModel
@{
    var listt = Model.partners;
    var list = Model.partners.ToList();//= List<>(1,2,3,4,5,6,7,8,9)
    //var col = list.skip(item1cot++).take(item1cot)
    var col1 = list.Take(1).ToList();//pt1
    var col2 = list.Skip(1).Take(2).ToList();//pt 2,3
    var col3 = list.Skip(3).Take(3).ToList();//pt 4,5,6
    var col4 = list.Skip(6).Take(2).ToList();//pt 7,8
    var col5 = list.Skip(8).Take(1).ToList();//pt 9
    var columns = new List<List<PartnerDTO>> { col1, col2, col3, col4, col5 };////= List<>(1,2,3,4,5,6,7,8,9){ col1, col2, col3, col4, col5 }
    // var columns = new List<List<PartnerDTO>> { };
    // var skip = 0;
    // var groupSizes = new List<int> { 1, 2, 3, 2, 1 };
    // @foreach (var size in groupSizes)
    // {
    //     var group = list.Skip(skip).Take(size).ToList();
    //     columns.Add(group);
    //     skip += size;
    // }
   
}
<section class="clients section-padding" style="background:#f5f5f5;">
    <div class="container">
        @Html.Partial("_PartnersTitlePatial", Model)
   
        <div class="d-md-flex justify-content-center partner-wrap gx-0">

            @foreach (var column in columns)
            {
                <div class="d-flex flex-column justify-content-center custom-col ">
                    @foreach (var partner in column)
                    {
                        <div class="partner-card @(partner.IsNoneMobile ? "mobile-is-none" : "") ">
                            @Html.Partial("_PartnersPatial", partner)
                        </div>
                    }
                </div>
            }
        </div>
       
    </div>
</section>
